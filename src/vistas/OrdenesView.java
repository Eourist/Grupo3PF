/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import entidades.*;
import java.awt.Component;
import java.awt.Container;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import modelos.*;

/**
 *
 * @author Eourist
 */
public class OrdenesView extends javax.swing.JInternalFrame{

    ArrayList<Prestador> prestadores;
    Prestador prestador;
    LocalDate fechaCreacion;
    LocalDate fechaAtencion;
    boolean habilitar = false;
    Afiliado afiliado;
    Horario horario;
    boolean efectivo;
    ArrayList<Horario> horarios;

    /**
     * Creates new form OrdenesView
     */
    public OrdenesView() {
        initComponents();
        llenarDesplegableEspecialidades();
        this.fechaCreacion = LocalDate.now();
        this.fechaAtencion = this.fechaCreacion;
        setFecha(fechaCreacion);
        for (Component component : getComponents(this.jPrestador)) {
            component.setEnabled(false);
        }

        this.habilitar = true;
        /*this.jrTurnoMañana.setEnabled(false);
        this.jrTurnoTarde.setEnabled(false);*/
    }

    private void limpiarTodo() {
        this.fechaAtencion = this.fechaCreacion;
        setFecha(fechaCreacion);
        for (Component component : getComponents(this.jPrestador)) {
            component.setEnabled(false);
        }
        /*this.jrTurnoMañana.setSelected(false);
        this.jrTurnoTarde.setSelected(false);
        this.jrTurnoMañana.setEnabled(false);
        this.jrTurnoTarde.setEnabled(false);*/
        this.afiliado = null;
        Horario horario = null;
        Horario turnoTarde = null;
        Horario turnoMañana = null;
        this.jTdniAfiliado.setText("");
        this.jRadioButton1.setSelected(false);
        this.jRadioButton2.setSelected(false);
        limpiarPrestadores();
        limpiarHorarios();
    }

    public void limpiarPrestadores() {
        if (this.lIdPrestador.getItemCount() > 0) {
            this.lIdPrestador.removeAll();
            this.lNomPrestadpr.removeAll();
            this.prestador = null;
        }
    }

    public void limpiarHorarios() {
        if (this.lIdHorario.getItemCount() > 0) {
            lHorariosPrestador.removeAll();
            lIdHorario.removeAll();
            this.horario = null;
        }
    }

    private void setFecha(LocalDate fecha) {
        setDias(fecha);
        setMes(fecha);
        setAño(fecha);
    }

    private void setAño(LocalDate date) {
        for (int i = 0; i < 3; i++) {
            jcAño.addItem((date.getYear() + i) + "");
        }
    }

    private void setMes(LocalDate date) {
        int i = date.getMonthValue();
        while (i <= 12) {
            jcMes.addItem(i + "");
            i++;
        }
    }

    private void setDias(LocalDate date) {
        int i = date.getDayOfMonth();
        System.out.println(date.withDayOfMonth(date.lengthOfMonth()).getDayOfMonth());
        while (i <= date.withDayOfMonth(date.lengthOfMonth()).getDayOfMonth()) {
            jcDia.addItem(i + "");
            i++;
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLafiliadoNom = new javax.swing.JLabel();
        jPrestador = new javax.swing.JPanel();
        jcAño = new javax.swing.JComboBox<>();
        jcMes = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButtonBuscarPrestador = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jcDia = new javax.swing.JComboBox<>();
        jComboBoxEspecialidades = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLdia = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        lIdHorario = new java.awt.List();
        lHorariosPrestador = new java.awt.List();
        lIdPrestador = new java.awt.List();
        lNomPrestadpr = new java.awt.List();
        jLError = new javax.swing.JLabel();
        jTdniAfiliado = new javax.swing.JTextField();
        jButtonBuscarAfiliado = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel8.setText("jLabel8");

        setClosable(true);
        setTitle("Administracion de ordenes");

        jLabel13.setText("Buscar Afiliado");

        jLafiliadoNom.setText("Nombre:");

        jcAño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcAñoActionPerformed(evt);
            }
        });

        jcMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcMesActionPerformed(evt);
            }
        });

        jLabel4.setText("Dia:");

        jLabel5.setText("Mes:");

        jLabel6.setText("Año:");

        jButtonBuscarPrestador.setText("Buscar prestador disponible");
        jButtonBuscarPrestador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarPrestadorActionPerformed(evt);
            }
        });

        jLabel1.setText("Especialidad:");

        jcDia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcDiaItemStateChanged(evt);
            }
        });

        jComboBoxEspecialidades.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxEspecialidadesItemStateChanged(evt);
            }
        });
        jComboBoxEspecialidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEspecialidadesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPrestadorLayout = new javax.swing.GroupLayout(jPrestador);
        jPrestador.setLayout(jPrestadorLayout);
        jPrestadorLayout.setHorizontalGroup(
            jPrestadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPrestadorLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPrestadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonBuscarPrestador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPrestadorLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxEspecialidades, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcDia, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcMes, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcAño, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPrestadorLayout.setVerticalGroup(
            jPrestadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPrestadorLayout.createSequentialGroup()
                .addGroup(jPrestadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxEspecialidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jcDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jcMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jcAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonBuscarPrestador))
        );

        jLabel17.setText("Metodo de pago:");

        jRadioButton1.setText("Efectivo");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Crédito");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jButton2.setText("Generar orden");
        jButton2.setActionCommand("generar ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lIdHorario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lIdHorario.setMaximumSize(new java.awt.Dimension(40, 80));
        lIdHorario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lIdHorarioMouseClicked(evt);
            }
        });
        lIdHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lIdHorarioActionPerformed(evt);
            }
        });

        lHorariosPrestador.setEnabled(false);

        lIdPrestador.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lIdPrestador.setMaximumSize(new java.awt.Dimension(40, 80));
        lIdPrestador.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lIdPrestadorMouseClicked(evt);
            }
        });
        lIdPrestador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lIdPrestadorActionPerformed(evt);
            }
        });

        lNomPrestadpr.setEnabled(false);
        lNomPrestadpr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lNomPrestadprActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(jLdia)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(lIdPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lNomPrestadpr, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lIdHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lHorariosPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lIdPrestador, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(lNomPrestadpr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lHorariosPrestador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lIdHorario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLdia))
        );

        jLError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jTdniAfiliado.setToolTipText("ingrese el dni del afiliado");
        jTdniAfiliado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTdniAfiliadoKeyTyped(evt);
            }
        });

        jButtonBuscarAfiliado.setText("Buscar");
        jButtonBuscarAfiliado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarAfiliadoActionPerformed(evt);
            }
        });

        jLabel7.setText("DNI:");

        jLabel10.setText("Prestadores disponibles:");

        jLabel9.setText("Horarios disponibles:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPrestador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLafiliadoNom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTdniAfiliado, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBuscarAfiliado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel10)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel9)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTdniAfiliado)
                    .addComponent(jButtonBuscarAfiliado)
                    .addComponent(jLabel13)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLafiliadoNom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPrestador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLError, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void llenarDesplegableEspecialidades() {
        ArrayList<Especialidad> especialidades = new ArrayList<>();
        EspecialidadData ed = new EspecialidadData();
        especialidades = ed.obtenerEspecialidades();
        jComboBoxEspecialidades.removeAllItems();
        for (Especialidad e : especialidades) {
            jComboBoxEspecialidades.addItem(e);
        }
    }

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        this.jRadioButton2.setSelected(false);
        this.efectivo = true;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButtonBuscarAfiliadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarAfiliadoActionPerformed
        if (this.jTdniAfiliado.getText().length() == 8) {
            this.afiliado = AfiliadoData.obtenerAfiliadoDni(Integer.parseInt(this.jTdniAfiliado.getText()));
            if (this.afiliado != null) {
                this.jLafiliadoNom.setText("Nombre: " + this.afiliado.getNombre());
                this.jLError.setText("");
                for (Component component : getComponents(this.jPrestador)) {
                    component.setEnabled(true);
                }
            } else {
                this.jLError.setText("El afiliado para este dni no existe o no esta activo");
                this.jLafiliadoNom.setText("Nombre: ");
                this.limpiarTodo();
            }
        } else {
            this.jLError.setText("Ingrese un dni valido");
            this.jLafiliadoNom.setText("Nombre: ");
            this.limpiarTodo();
        }
    }//GEN-LAST:event_jButtonBuscarAfiliadoActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        this.jRadioButton1.setSelected(false);
        this.efectivo = false;
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jcDiaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcDiaItemStateChanged
        if (this.habilitar) {
            if (jcDia.getSelectedIndex() > -1) {
                this.fechaAtencion = LocalDate.of(this.fechaAtencion.getYear(), this.fechaAtencion.getMonthValue(), Integer.parseInt(this.jcDia.getSelectedItem().toString()));
            }
        }
    }//GEN-LAST:event_jcDiaItemStateChanged

    private void jComboBoxEspecialidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEspecialidadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEspecialidadesActionPerformed

    private void jComboBoxEspecialidadesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxEspecialidadesItemStateChanged

    }//GEN-LAST:event_jComboBoxEspecialidadesItemStateChanged

    private void jButtonBuscarPrestadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarPrestadorActionPerformed
        this.limpiarHorarios();
        this.limpiarPrestadores();
        this.prestadores = PrestadorData.obtenerPrestadoresDisponibles2((Especialidad) jComboBoxEspecialidades.getSelectedItem(), this.fechaAtencion);
        //this.prestadores = PrestadorData.obtenerPrestadoresDisponibles(this.fechaAtencion);
        //System.out.println(this.prestadores.size());
        for (Prestador prestador : this.prestadores) {
            if (prestador.getEspecialidad().getNombre().toString().equals(this.jComboBoxEspecialidades.getSelectedItem().toString())) {
                this.lIdPrestador.add(prestador.getId() + "");
                this.lNomPrestadpr.add(prestador.getNombre());
            }
        }
        //this.jLError.setText(this.fechaAtencion.getDayOfWeek() + " ");
        //this.jLdia.setText(this.fechaAtencion.getDayOfWeek() + "  " + this.fechaAtencion);
    }//GEN-LAST:event_jButtonBuscarPrestadorActionPerformed

    private void jcMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcMesActionPerformed
        if (this.habilitar) {
            if (this.fechaAtencion.getYear() == this.fechaCreacion.getYear() && Integer.parseInt(this.jcMes.getSelectedItem().toString()) == this.fechaCreacion.getMonthValue()) {
                this.fechaAtencion = LocalDate.of(this.fechaAtencion.getYear(), Integer.parseInt(this.jcMes.getSelectedItem().toString()), this.fechaCreacion.getDayOfMonth());
            } else {
                this.fechaAtencion = LocalDate.of(this.fechaAtencion.getYear(), Integer.parseInt(this.jcMes.getSelectedItem().toString()), 1);
            }
            jcDia.removeAllItems();
            setDias(this.fechaAtencion);
        }
    }//GEN-LAST:event_jcMesActionPerformed

    private void jcAñoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcAñoActionPerformed

        if (this.habilitar) {
            if (this.fechaCreacion.getYear() == Integer.parseInt(jcAño.getSelectedItem().toString())) {
                this.fechaAtencion = this.fechaCreacion;
            } else {
                this.fechaAtencion = LocalDate.of(Integer.parseInt(this.jcAño.getSelectedItem().toString()), 1, 1);
            }
            this.habilitar = false;
            jcMes.removeAllItems();
            setMes(this.fechaAtencion);
            jcDia.removeAllItems();
            setDias(this.fechaAtencion);
            this.habilitar = true;
        }
    }//GEN-LAST:event_jcAñoActionPerformed

    private void lIdPrestadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lIdPrestadorActionPerformed
/*this.horarios = HorarioData.obtenerHorariosDisponible(Integer.parseInt(this.lIdPrestador.getItem(this.lIdPrestador.getSelectedIndex())), this.fechaAtencion);
if (this.horarios != null) {	
            lHorariosPrestador.removeAll();
            lIdHorario.removeAll();	
            for(Horario h : horarios){	
                System.out.println(h.toString());	
                lIdHorario.add(String.valueOf(h.getId()));	
                lHorariosPrestador.add(h.toString());	
            }*/
        //HorarioData hd = new HorarioData();
        //PrestadorData pd = new PrestadorData();
        //Prestador p = pd.obtenerPrestador(Integer.valueOf(lIdPrestador.getSelectedItem()));
        //horarios = hd.obtenerHorariosDiaPrestador(p.getId(), fechaAtencion.getDayOfWeek().getValue());
        //LocalTime medioDia = LocalTime.of(12, 00);

        /*if (this.horarios.get(0).getHoraFin().isAfter(medioDia)) {
                this.jLTT.setText("de: " + this.horarios.get(0).getHoraInicio().getHour() + "hasta: " + this.horarios.get(0).getHoraFin().getHour());
                this.jrTurnoTarde.setEnabled(true);
                this.turnoTarde = this.horarios.get(0);
            } else {
                this.jLTm.setText("de: " + this.horarios.get(0).getHoraInicio().getHour() + "hasta: " + this.horarios.get(0).getHoraFin().getHour());
                this.jrTurnoMañana.setEnabled(true);
                this.turnoMañana = this.horarios.get(0);
            }
            if (this.horarios.size() > 2) {
                if (this.horarios.get(1).getHoraFin().isAfter(medioDia)) {
                    this.jLTT.setText("de: " + this.horarios.get(0).getHoraInicio().getHour() + "hasta: " + this.horarios.get(0).getHoraFin().getHour());
                    this.jrTurnoTarde.setEnabled(true);
                    this.turnoTarde = this.horarios.get(0);
                } else {
                    this.jLTm.setText("de: " + this.horarios.get(0).getHoraInicio().getHour() + "hasta: " + this.horarios.get(0).getHoraFin().getHour());
                    this.jrTurnoMañana.setEnabled(true);
                    this.turnoMañana = this.horarios.get(0);
                }
            }*/

    }//GEN-LAST:event_lIdPrestadorActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (this.afiliado != null) {
            if (this.horario != null) {
                if (OrdenData.habilitarOrden(afiliado.getId(), fechaAtencion, horario.getPrestador().getId())) {
                    if (this.jRadioButton1.getSelectedObjects() != null || this.jRadioButton2.getSelectedObjects() != null) {
                        OrdenData.altaOrden(
                                new Orden(
                                        this.afiliado,
                                        this.horario,
                                        this.fechaAtencion,
                                        this.fechaCreacion,
                                        this.efectivo,
                                        true
                                )
                        );
                        limpiarTodo();
                    } else {
                        this.jLError.setText("Seleccione un metodo de pago");
                    }
                } else {
                    this.jLError.setText("El afiliado seleccionado ya tiene un turno para este dia");
                }
            } else {
                this.jLError.setText("Seleccione un horario disponible");
            }
        } else {
            this.jLError.setText("Seleccione un afiliado");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void lIdHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lIdHorarioActionPerformed
        horario = new HorarioData().obtenerHorario(Integer.valueOf(lIdHorario.getSelectedItem()));
    }//GEN-LAST:event_lIdHorarioActionPerformed

    private void lIdPrestadorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lIdPrestadorMouseClicked
        if (-1 != this.lIdPrestador.getSelectedIndex()) {
            this.horarios = HorarioData.obtenerHorariosDisponible(Integer.parseInt(this.lIdPrestador.getItem(this.lIdPrestador.getSelectedIndex())), this.fechaAtencion);
            for (Horario h : horarios)
                System.out.println(h.toString());
            if (this.lIdHorario.getItemCount() > 0) {
                lHorariosPrestador.removeAll();
                lIdHorario.removeAll();
            }
            if (this.horarios != null) {
                this.prestador = PrestadorData.obtenerPrestador(Integer.parseInt(this.lIdPrestador.getItem(this.lIdPrestador.getSelectedIndex())));
                for (Horario h : horarios) {
                    System.out.println(h.toString());
                    lIdHorario.add(String.valueOf(h.getId()));
                    lHorariosPrestador.add(h.toString());
                }
            }
        }
    }//GEN-LAST:event_lIdPrestadorMouseClicked

    private void lIdHorarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lIdHorarioMouseClicked
        if (-1 != this.lIdHorario.getSelectedIndex()) {
            this.horario = HorarioData.obtenerHorario(Integer.parseInt(this.lIdHorario.getItem(this.lIdHorario.getSelectedIndex())));
        }
    }//GEN-LAST:event_lIdHorarioMouseClicked

    private void jTdniAfiliadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTdniAfiliadoKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) || ((JTextField) evt.getSource()).getText().length() >= 8) {
            evt.consume();
        }
    }//GEN-LAST:event_jTdniAfiliadoKeyTyped

    private void lNomPrestadprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lNomPrestadprActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lNomPrestadprActionPerformed

    private Component[] getComponents(Component container) {
        ArrayList<Component> list = null;

        try {
            list = new ArrayList<Component>(Arrays.asList(
                    ((Container) container).getComponents()));
            for (int index = 0; index < list.size(); index++) {
                for (Component currentComponent : getComponents(list.get(index))) {
                    list.add(currentComponent);
                }
            }
        } catch (ClassCastException e) {
            list = new ArrayList<Component>();
        }

        return list.toArray(new Component[list.size()]);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonBuscarAfiliado;
    private javax.swing.JButton jButtonBuscarPrestador;
    private javax.swing.JComboBox<Especialidad> jComboBoxEspecialidades;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLError;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLafiliadoNom;
    private javax.swing.JLabel jLdia;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPrestador;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField jTdniAfiliado;
    private javax.swing.JComboBox<String> jcAño;
    private javax.swing.JComboBox<String> jcDia;
    private javax.swing.JComboBox<String> jcMes;
    private java.awt.List lHorariosPrestador;
    private java.awt.List lIdHorario;
    private java.awt.List lIdPrestador;
    private java.awt.List lNomPrestadpr;
    // End of variables declaration//GEN-END:variables
}
